import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/material.dart';

class AppTheme {
  ThemeData get lightTheme => FlexThemeData.light(
        scheme: FlexScheme.blumineBlue,
        surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
        blendLevel: 10,
        appBarStyle: FlexAppBarStyle.background,
        bottomAppBarElevation: 1.0,
        colorScheme: flexSchemeLight,
        subThemesData: const FlexSubThemesData(
          blendOnLevel: 20,
          blendTextTheme: true,
          useTextTheme: true,
          useM2StyleDividerInM3: true,
          thickBorderWidth: 2.0,
          elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
          elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
          outlinedButtonOutlineSchemeColor: SchemeColor.primary,
          toggleButtonsBorderSchemeColor: SchemeColor.primary,
          segmentedButtonSchemeColor: SchemeColor.primary,
          segmentedButtonBorderSchemeColor: SchemeColor.primary,
          unselectedToggleIsColored: true,
          sliderValueTinted: true,
          inputDecoratorSchemeColor: SchemeColor.primary,
          inputDecoratorBackgroundAlpha: 15,
          inputDecoratorRadius: 10.0,
          inputDecoratorPrefixIconSchemeColor: SchemeColor.primary,
          chipRadius: 10.0,
          popupMenuRadius: 6.0,
          popupMenuElevation: 6.0,
          alignedDropdown: true,
          useInputDecoratorThemeInDialogs: true,
          appBarScrolledUnderElevation: 8.0,
          drawerWidth: 280.0,
          drawerIndicatorSchemeColor: SchemeColor.primary,
          bottomNavigationBarMutedUnselectedLabel: false,
          bottomNavigationBarMutedUnselectedIcon: false,
          menuRadius: 6.0,
          menuElevation: 6.0,
          menuBarRadius: 0.0,
          menuBarElevation: 1.0,
          navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
          navigationBarMutedUnselectedLabel: false,
          navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationBarMutedUnselectedIcon: false,
          navigationBarIndicatorSchemeColor: SchemeColor.primary,
          navigationBarIndicatorOpacity: 1.00,
          navigationBarElevation: 2.0,
          navigationBarHeight: 70.0,
          navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
          navigationRailMutedUnselectedLabel: false,
          navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationRailMutedUnselectedIcon: false,
          navigationRailIndicatorSchemeColor: SchemeColor.primary,
          navigationRailIndicatorOpacity: 1.00,
        ),
        keyColors: const FlexKeyColors(
          useTertiary: true,
          keepPrimary: true,
          keepTertiary: true,
        ),
        visualDensity: FlexColorScheme.comfortablePlatformDensity,
        useMaterial3: true,
        swapLegacyOnMaterial3: true,
// To use the Playground font, add GoogleFonts package and uncomment
// fontFamily: GoogleFonts.notoSans().fontFamily,
      );

  ThemeData get darkTheme => FlexThemeData.dark(
        scheme: FlexScheme.bahamaBlue,
        surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
        blendLevel: 15,
        appBarStyle: FlexAppBarStyle.background,
        bottomAppBarElevation: 2.0,
        colorScheme: flexSchemeDark,
        subThemesData: const FlexSubThemesData(
          blendOnLevel: 40,
          blendTextTheme: true,
          useTextTheme: true,
          useM2StyleDividerInM3: true,
          thickBorderWidth: 2.0,
          elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
          elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
          outlinedButtonOutlineSchemeColor: SchemeColor.primary,
          toggleButtonsBorderSchemeColor: SchemeColor.primary,
          segmentedButtonSchemeColor: SchemeColor.primary,
          segmentedButtonBorderSchemeColor: SchemeColor.primary,
          unselectedToggleIsColored: true,
          sliderValueTinted: true,
          inputDecoratorSchemeColor: SchemeColor.primary,
          inputDecoratorBackgroundAlpha: 22,
          inputDecoratorRadius: 10.0,
          chipRadius: 10.0,
          popupMenuRadius: 6.0,
          popupMenuElevation: 6.0,
          alignedDropdown: true,
          useInputDecoratorThemeInDialogs: true,
          drawerWidth: 280.0,
          drawerIndicatorSchemeColor: SchemeColor.primary,
          bottomNavigationBarMutedUnselectedLabel: false,
          bottomNavigationBarMutedUnselectedIcon: false,
          menuRadius: 6.0,
          menuElevation: 6.0,
          menuBarRadius: 0.0,
          menuBarElevation: 1.0,
          navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
          navigationBarMutedUnselectedLabel: false,
          navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationBarMutedUnselectedIcon: false,
          navigationBarIndicatorSchemeColor: SchemeColor.primary,
          navigationBarIndicatorOpacity: 1.00,
          navigationBarElevation: 2.0,
          navigationBarHeight: 70.0,
          navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
          navigationRailMutedUnselectedLabel: false,
          navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
          navigationRailMutedUnselectedIcon: false,
          navigationRailIndicatorSchemeColor: SchemeColor.primary,
          navigationRailIndicatorOpacity: 1.00,
        ),
        keyColors: const FlexKeyColors(
          useTertiary: true,
          keepPrimary: true,
        ),
        visualDensity: FlexColorScheme.comfortablePlatformDensity,
        useMaterial3: true,
        swapLegacyOnMaterial3: true,
// To use the Playground font, add GoogleFonts package and uncomment
// fontFamily: GoogleFonts.notoSans().fontFamily,
      );

  // Light and dark ColorSchemes made by FlexColorScheme v7.3.1.
// These ColorScheme objects require Flutter 3.7 or later.
  ColorScheme get flexSchemeLight =>  ColorScheme(
        brightness: Brightness.light,
        primary: Color(0xff19647e),
        onPrimary: Color(0xfff0f6f8),
        primaryContainer: Color(0xffbde9ff),
        onPrimaryContainer: Color(0xff001f2a),
        secondary: Color(0xff4d616c),
        onSecondary: Color(0xffffffff),
        secondaryContainer: Color(0xffd0e6f2),
        onSecondaryContainer: Color(0xff081e27),
        tertiary: Color(0xfffeb716),
        onTertiary: Color(0xff141205),
        tertiaryContainer: Color(0xffffdea9),
        onTertiaryContainer: Color(0xff271900),
        error: Color(0xffba1a1a),
        onError: Color(0xffffffff),
        errorContainer: Color(0xffffdad6),
        onErrorContainer: Color(0xff410002),
        background: Color(0xfff2f6f8),
        onBackground: Color(0xff191c1e),
        surface: Color(0xfff6f9fb),
        onSurface: Color(0xff191c1e),
        surfaceVariant: Color(0xffd8e1e6),
        onSurfaceVariant: Color(0xff40484c),
        outline: Color(0xff70787d),
        outlineVariant: Color(0xffc0c8cd),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xff2d3233),
        onInverseSurface: Color(0xffeff1f3),
        inversePrimary: Color(0xff66d3ff),
        surfaceTint: Color(0xff006684),
      );

  ColorScheme get flexSchemeDark =>  ColorScheme(
        brightness: Brightness.dark,
        primary: Color(0xff82bace),
        onPrimary: Color(0xff1c2528),
        primaryContainer: Color(0xffe80808),
        onPrimaryContainer: Color(0xffbde9ff),
        secondary: Color(0xffb4cad6),
        onSecondary: Color(0xff1f333c),
        secondaryContainer: Color(0xff354a53),
        onSecondaryContainer: Color(0xffd0e6f2),
        tertiary: Color(0xffe3c28c),
        onTertiary: Color(0xff412d05),
        tertiaryContainer: Color(0xff5a4319),
        onTertiaryContainer: Color(0xffffdea9),
        error: Color(0xffffb4ab),
        onError: Color(0xff690005),
        errorContainer: Color(0xff93000a),
        onErrorContainer: Color(0xffffb4ab),
        background: Color(0xff1f2528),
        onBackground: Color(0xffe1e2e4),
        surface: Color(0xff1b2022),
        onSurface: Color(0xffe1e2e4),
        surfaceVariant: Color(0xff414b4f),
        onSurfaceVariant: Color(0xffc0c8cd),
        outline: Color(0xff8a9297),
        outlineVariant: Color(0xff40484c),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xffdee0e3),
        onInverseSurface: Color(0xff2e3132),
        inversePrimary: Color(0xff006684),
        surfaceTint: Color(0xff66d3ff),
      );
}
